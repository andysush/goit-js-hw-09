{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAoBC,SAASC,cAAc,qBAC3CC,EAAcF,SAASC,cAAc,oBACrCE,EAAeH,SAASC,cAAc,sBAmB5C,SAASG,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAGpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,G,GAEpBA,E,IAGFS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBjB,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBjB,EAAAoB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IApCjDd,SAASC,cAAc,SAE/BqB,iBAAiB,UAAU,SAAAC,GAChCA,EAAEC,iBACF,IAAMC,EAAaC,OAAO3B,EAAkB4B,OACtCC,EAAaF,OAAOxB,EAAYyB,OAChCE,EAAiBH,OAAOvB,EAAawB,OAC3C,GAAIF,EAAa,GAAKG,EAAa,GAAKC,GAAkB,EACxDhC,EAAAoB,OAAOI,QAAQ,qCAGjB,IAAK,IAAIS,EAAQ,EAAGA,EAAQD,EAAiB,EAAGC,GAAS,EAAG,CAG1D1B,EAAc0B,EAFFL,EAAaG,EAAaE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayInputEl = document.querySelector('input[name=delay]');\nconst stepInputEl = document.querySelector('input[name=step]');\nconst amountItemEl = document.querySelector('input[name=amount]');\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n  const firstDelay = Number(firstDelayInputEl.value);\n  const stepNumber = Number(stepInputEl.value);\n  const amountPromises = Number(amountItemEl.value);\n  if (firstDelay < 0 || stepNumber < 0 || amountPromises <= 0) {\n    Notify.failure('insert only positive numbers');\n    return;\n  }\n  for (let index = 1; index < amountPromises + 1; index += 1) {\n    let delay = firstDelay + stepNumber * index;\n\n    createPromise(index, delay);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInputEl","document","querySelector","$ce04d3a99e08e73b$var$stepInputEl","$ce04d3a99e08e73b$var$amountItemEl","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","firstDelay","Number","value","stepNumber","amountPromises","index"],"version":3,"file":"03-promises.995da1d7.js.map"}